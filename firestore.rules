rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        // Fungsi helper untuk mengecek autentikasi
        function isAuthenticated() {
            return request.auth != null;
        }

        // Fungsi untuk mengecek peran admin
        function isAdmin() {
            return isAuthenticated() && 
                get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        }

        // Fungsi untuk mengecek peran kasir
        function isCashier() {
            return isAuthenticated() && 
                get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'cashier';
        }

        // Aturan untuk koleksi users
        match /users/{userId} {
            // Pengguna bisa membaca & mengupdate profilnya sendiri
            allow read, update: if isAuthenticated() && request.auth.uid == userId;
            // Hanya admin yang bisa membuat & menghapus user
            allow create, delete: if isAdmin();
            // Admin bisa membaca semua data user
            allow read: if isAdmin();
        }

        // Aturan untuk koleksi products
        match /products/{productId} {
            // Semua orang bisa melihat produk
            allow read: if true;
            // Hanya admin & kasir yang bisa mengupdate stok
            allow update: if isAuthenticated() && (isAdmin() || isCashier());
            // Hanya admin yang bisa membuat & menghapus produk
            allow create, delete: if isAdmin();
        }

        // Aturan untuk koleksi transactions
        match /transactions/{transactionId} {
            // Pengguna bisa melihat transaksinya sendiri
            allow read: if isAuthenticated() && 
                request.auth.uid == resource.data.userId;
            // Admin & kasir bisa melihat semua transaksi
            allow read: if isAdmin() || isCashier();
            // Pengguna yang terautentikasi bisa membuat transaksi
            allow create: if isAuthenticated();
            // Hanya admin yang bisa mengupdate & menghapus transaksi
            allow update, delete: if isAdmin();
        }

        // Aturan untuk koleksi stock_updates
        match /stock_updates/{updateId} {
            // Admin & kasir bisa melihat & membuat update stok
            allow read, create: if isAuthenticated() && 
                (isAdmin() || isCashier());
            // Hanya admin yang bisa mengubah & menghapus riwayat update
            allow update, delete: if isAdmin();
            // Validasi data update stok
            allow create: if request.resource.data.keys().hasAll([
                'productId', 'quantity', 'updatedBy', 'timestamp'
            ]) && request.resource.data.quantity > 0;
        }
    }
}
